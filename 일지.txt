2022.02.15
■ 플레이어 기본 조작 구현
 : 간단한 플랫폼 이동 구현
 - 이동 A, D
 - 점프 SPACE

■ 카메라 이동 구현
 : 플레이어를 따라 다니는 카메라 구현
 - 플레이어의 YZ와 카메라의 YZ간의 거리를 구해 선형보관을 이용해 따라감
 
//------------------------------------------------------------------------------------------------------------------------------------------
2022.02.18
■ 플레이어 추가 조작 구현
 - 더블점프 SPACE
 - 벽에 붙기
	-> 플레이어의 transform.foward 방향으로 레이 검사를 한 뒤 부딪힌 오브젝트의 태그를 검사해 벽에 붙음
 - 벽타기 W, S
	-> 벽에 붙은 후 상하로 이동 가능
 - 끌어당기기 R
 
//------------------------------------------------------------------------------------------------------------------------------------------
2022.02.20 
■ 슬로우 모션 구현(TimeSlower)
 : 오브젝트 주변에 있는 적들의 속도, 회전속도가 느려지게 함
 - hashCode와 rigidyBodyInfo를 키와 밸류로 설정한 Dictionary로 슬로우 모션을 적용할 오브젝트 관리
	-> TriggerEnter시 Dictionary에 등록
	-> TriggerStay시 Velocity 수정
	-> TriggerExit시 Velocity 복구

//------------------------------------------------------------------------------------------------------------------------------------------
2022.02.23
■ Inspector상 변수 이름 변경
 : 배열을 Inspector에 띄울 시 요소의 이름이 Element N 으로 나타남
   스킬 매니저에서 각 스킬의 활성/비활성 락/언락을 관리하려는데 스킬 이름이 아닌 Element N으로 나타나 불편했음
   //스킬 인덱스를 enum으로 정의하고 배열로 SkillInfo를 저장
	-> PropertyAttribute를 상속받은 NamedArrayElementAttribute 클래스를 만들고, 멤버필드에 string 타입의 name을 추가한 뒤 생성자로 받도록 구현
	-> PropertyDrawer를 상속받고, NamedArrayElementAttribute타입의 CustomPropertyDrawer Attribute를 속성을 지정한 NamedArrayElementTitleDrawer 클래스 생성
	

//------------------------------------------------------------------------------------------------------------------------------------------
2022.02.24
■ Connection 스크립트
 : 문과 문을 여는 스위치를 연결시키기 위해 구현함
 - 배열로 연결할 게임 오브젝트를 저장
 - 커넥션 정보를 에디터상에서 그림 
	-> CustomEdtior Attribute를 사용한 ConnectionDrawScript작성
	-> Connection 이 배열로 저장하고 있는 연결 객체를 순회하며 라인을 그리도록 구현
 
//------------------------------------------------------------------------------------------------------------------------------------------
2022.02.28 
■ Interaction 스크립트
 : 스위치와 상호작용을 위해 구현하기 시작. 유동적인 상호작용이 가능하도록 개발
 - InteractionInputData
 - Interactable
 - InteractionData
 
//------------------------------------------------------------------------------------------------------------------------------------------
2022.03.01
■ Interaction UI
 : 상호작용 시 화면 상단에 상호작용에 관한 정보를 텍스트로 출력
 - 메이플스토리 폰트를 유니티로 불러와서 TMP(TextMeshPro)로 생성 후 사용
 - 한글이 안나옴 -> 아틀라스 크기 조절
 
 해상도 대응, Sacle With Screen Size 기준은 800,600으로 매치는 1

//------------------------------------------------------------------------------------------------------------------------------------------
2022.03.03
■ 문과 스위치 맵에 배치
 : 스위치와 상호작용을 통해 문이 열리는 시스템을 구현 및 적용 완료
 
■ Character, Damage 스크립트
 : 캐릭터의 정보(체력 등)와 공격을 처리하는 스크립트 추가
 
■ 가시 함정 추가
 : 충돌 시 체력을 깎는 함정 추가

//------------------------------------------------------------------------------------------------------------------------------------------
2022.03.05
■ 02.15 ~ 03.03 작업 중의 버그 수정

//------------------------------------------------------------------------------------------------------------------------------------------
2022.03.06
■ 임시 MainMenu 추가
 : 버튼 클릭 시 씬 변경
 - UnityEngine.SceneManagement 사용
 - 버튼 클릭 시 SceneManager.LoadScene 로 씬 로드
 - 빌드 세팅에서 씬 등록

//------------------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------------------------------------------------------------
 바운더 시작 위치, 끝 위치 설정 및 그리기

